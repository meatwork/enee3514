// Copyright (C) 1991-2014 Altera Corporation. All rights reserved.
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, the Altera Quartus II License Agreement,
// the Altera MegaCore Function License Agreement, or other 
// applicable license agreement, including, without limitation, 
// that your use is for the sole purpose of programming logic 
// devices manufactured by Altera and sold by Altera or its 
// authorized distributors.  Please refer to the applicable 
// agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "08/25/2014 21:05:13"
                                                                        
// Verilog Self-Checking Test Bench (with test vectors) for design :    lab1_082514
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module lab1_082514_vlg_vec_tst();
// constants                                           
// general purpose registers
reg A;
reg B;
// wires                                               
wire D0;
wire D1;
wire D2;
wire D3;

// assign statements (if any)                          
lab1_082514 i1 (
// port map - connection between master ports and signals/registers   
	.A(A),
	.B(B),
	.D0(D0),
	.D1(D1),
	.D2(D2),
	.D3(D3)
);
initial 
begin 
#1000000 $finish;
end 

// B
initial
begin
	B = 1'b0;
	B = #10000 1'b1;
	B = #10000 1'b0;
	B = #10000 1'b1;
	B = #30000 1'b0;
	B = #30000 1'b1;
	B = #10000 1'b0;
	B = #10000 1'b1;
	B = #30000 1'b0;
	B = #10000 1'b1;
	B = #40000 1'b0;
	B = #30000 1'b1;
	B = #40000 1'b0;
	B = #20000 1'b1;
	B = #30000 1'b0;
	B = #10000 1'b1;
	B = #10000 1'b0;
	B = #40000 1'b1;
	B = #30000 1'b0;
	B = #50000 1'b1;
	B = #10000 1'b0;
	B = #30000 1'b1;
	B = #30000 1'b0;
	B = #10000 1'b1;
	B = #30000 1'b0;
	B = #10000 1'b1;
	B = #10000 1'b0;
	B = #10000 1'b1;
	B = #40000 1'b0;
	B = #10000 1'b1;
	B = #10000 1'b0;
	B = #10000 1'b1;
	B = #10000 1'b0;
	B = #10000 1'b1;
	B = #40000 1'b0;
	B = #30000 1'b1;
	B = #10000 1'b0;
	B = #10000 1'b1;
	B = #10000 1'b0;
	B = #10000 1'b1;
	B = #20000 1'b0;
	B = #30000 1'b1;
	B = #40000 1'b0;
	B = #30000 1'b1;
	B = #20000 1'b0;
	B = #30000 1'b1;
	B = #10000 1'b0;
	B = #20000 1'b1;
end 

// A
initial
begin
	A = 1'b1;
	A = #20000 1'b0;
	A = #10000 1'b1;
	A = #10000 1'b0;
	A = #20000 1'b1;
	A = #10000 1'b0;
	A = #10000 1'b1;
	A = #30000 1'b0;
	A = #10000 1'b1;
	A = #10000 1'b0;
	A = #10000 1'b1;
	A = #20000 1'b0;
	A = #10000 1'b1;
	A = #10000 1'b0;
	A = #20000 1'b1;
	A = #50000 1'b0;
	A = #10000 1'b1;
	A = #20000 1'b0;
	A = #20000 1'b1;
	A = #30000 1'b0;
	A = #10000 1'b1;
	A = #10000 1'b0;
	A = #10000 1'b1;
	A = #20000 1'b0;
	A = #10000 1'b1;
	A = #10000 1'b0;
	A = #10000 1'b1;
	A = #10000 1'b0;
	A = #20000 1'b1;
	A = #10000 1'b0;
	A = #10000 1'b1;
	A = #10000 1'b0;
	A = #10000 1'b1;
	A = #10000 1'b0;
	A = #30000 1'b1;
	A = #10000 1'b0;
	A = #20000 1'b1;
	A = #10000 1'b0;
	A = #20000 1'b1;
	A = #20000 1'b0;
	A = #30000 1'b1;
	A = #20000 1'b0;
	A = #10000 1'b1;
	A = #20000 1'b0;
	A = #30000 1'b1;
	A = #10000 1'b0;
	A = #20000 1'b1;
	A = #10000 1'b0;
	A = #10000 1'b1;
	A = #30000 1'b0;
	A = #70000 1'b1;
	A = #10000 1'b0;
	A = #10000 1'b1;
	A = #10000 1'b0;
	A = #20000 1'b1;
	A = #10000 1'b0;
	A = #20000 1'b1;
	A = #10000 1'b0;
	A = #10000 1'b1;
	A = #20000 1'b0;
end 
initial 
begin 
#1000000 $finish;
end 
endmodule

